#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=b764841b9855e434bcd74e61f4bed39a9635ccb7
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Generate the swagger.yaml file in the 'api' sub-diretory using the
# swagger extractor in crus/gen_swagger.py.  If the swagger has
# changed as a result of the extraction it will show up in the commit,
# otherwise no change.
SWAGGER=api/swagger.yaml
GEN_SWAGGER=crus/gen_swagger.py
if ! python3  ${GEN_SWAGGER} ${SWAGGER}
then
	cat <<EOF
Error: failed to generate ${SWAGGER}. Something may be wrong with
${GEN_SWAGGER}.  Please fix the problem and re-run your
commit.

The most common cause of this error is failure to set up or
activate a suitable virtual environment for cray-crus.  If you
have not done this please refer to api/README.md for more
information.
EOF
	exit 1
fi

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
